T = { ERROR, IDENT, INTTYPE, DBLTYPE, NUMLIT, PLUS, MINUS, MULT, DIV, MOD, NOT, AND, OR, XOR, ASSIGN, LT, GT, SHIFTL, SHIFTR, PLUSPLUS, PLUSEQ, MINUSMINUS, MINUSEQ, MULTEQ, DIVEQ, MODEQ, NOTEQ, LOGAND, ANDEQ, LOGOR, OREQ, XOREQ, EQUALTO, SHIFTLEQ, LTE, SHIFTREQ, GTE, TILDA, RPAREN, LPAREN, SEMI, QUEST, COLON, COMMA, EXP, EXPEQ, EOFT };
N = { <program>, <more_stmts>, <stmt>, <decl>, <ntype>, <decl_tail>, <more_decls>, <term>, <pre>, <uoppre>, <var>, <post>, <stmt_tail>, <binop> }
S = <program>
P = {
1. <program> -> [start_queue] <stmt> SEMI [eval_queue] <more_stmts> EOFT
2. <program> -> <decl> SEMI <more_stmts> EOFT
3. <more_stmts> -> [start_queue] <stmt> SEMI [eval_queue] <more_stmts>
4. <more_stmts> -> <decl> SEMI <more_stmts>
5. <more_stmts> -> {}
6. <stmt> -> <term> <stmt_tail>
7. <decl> -> <ntype> [start_queue] IDENT [declare_variable] <decl_tail> <more_decls>
8. <ntype> -> INTTYPE [save_type]
9. <ntype> -> DBLTYPE [save_type]
10. <decl_tail> -> ASSIGN <stmt> [eval_queue]
11. <decl_tail> -> {}
12. <more_decls> -> COMMA IDENT <decl_tail> <more_decls>
13. <more_decls> -> {}
14. <term> -> <pre> <var> <post>
15. <term> -> LPAREN [start_queue] <stmt> RPAREN [eval_queue] 
16. <pre> -> <uoppre> <pre>
17. <pre> -> {}
18. <uoppre> -> PLUS [found_operator (UPLUS)]
19. <uoppre> -> MINUS
20. <uoppre> -> NOT
21. <uoppre> -> TILDA
22. <uoppre> -> PLUSPLUS
23. <uoppre> -> MINUSMINUS
24. <var> -> IDENT [found_variable]
25. <var> -> NUMLIT [found_numlit]
26. <post> -> PLUSPLUS
27. <post> -> MINUSMINUS
28. <post> -> {}
29. <stmt_tail> -> <binop> <stmt>
30. <stmt_tail> -> QUEST <stmt> COLON <stmt>
31. <stmt_tail> -> {}
32. <binop> -> PLUS [found_operator (BPLUS)]
33. <binop> -> MINUS
34. <binop> -> MULT
35. <binop> -> DIV
36. <binop> -> MOD
37. <binop> -> AND
38. <binop> -> OR
39. <binop> -> XOR
40. <binop> -> ASSIGN
41. <binop> -> LT
42. <binop> -> GT
43. <binop> -> SHIFTL
44. <binop> -> SHIFTR
45. <binop> -> PLUSEQ
46. <binop> -> MINUSEQ
47. <binop> -> MULTEQ
48. <binop> -> DIVEQ
49. <binop> -> MODEQ
50. <binop> -> NOTEQ
51. <binop> -> LOGAND
52. <binop> -> ANDEQ
53. <binop> -> LOGOR
54. <binop> -> OREQ
55. <binop> -> XOREQ
56. <binop> -> EQUALTO
57. <binop> -> SHIFTLEQ
58. <binop> -> LTE
59. <binop> -> SHIFTREQ
60. <binop> -> GTE
61. <binop> -> COMMA
62. <binop> -> EXP
63. <binop> -> EXPEQ
}
